{
    "contents" : "# load libraries\nlibrary(\"gdata\")\nlibrary(\"Gviz\")\nlibrary(\"rtracklayer\")\nlibrary(\"biomaRt\")\nlibrary(\"GenomicRanges\")\nlibrary(\"GenomicAlignments\")\nlibrary(BSgenome.Cfamiliaris.UCSC.canFam3)\n\noptions(ucscChromosomeNames=FALSE)\n\nsetwd('~/Data/Tremethick/EMT/')\n\nsource(\"~/Development/GeneralPurpose/R/binnedAverage.R\")\nsource(\"~/Development/GeneralPurpose/R/binnedSum.R\")\nsource(\"~/Development/JCSMR_Genomics/R/TremethickLab/H2AZ_EMT/calculateCoverage.R\")\n\n# define Ensembl IDs prior to lookup at Biomart:\n# # EMT markers\n# # mesenchymal genes HGNC Symbols\n# FN1 -> ENSCAFG00000014345\n# ZEB1 -> ENSCAFG00000004023\n# TGFb1 -> ENSCAFG00000005014\n# SPARC -> ENSCAFG00000017855\n# TWIST2 -> ENSCAFG00000012469\n# # epithelial markers\n# CDH1 -> E-cadherin -> ENSCAFG00000020305 [CDH3 -> ENSCAFG00000020303]\n# SPP1 -> ENSCAFG00000009569\n# FGFBP1 -> ENSCAFG00000015272\n# MMP9 -> ENSCAFG00000009905\n# EPCAM -> ENSCAFG00000002653\n\n#----------connect to Ensembl biomaRt for annotation data----------------------\nensembl <- useEnsembl(biomart = \"ensembl\", host = \"asia.ensembl.org\")\ndog <- useEnsembl(biomart = \"ensembl\", dataset = \"cfamiliaris_gene_ensembl\", host = \"asia.ensembl.org\")\nhuman <- useEnsembl(biomart = \"ensembl\", dataset = \"hsapiens_gene_ensembl\", host = \"asia.ensembl.org\")\n\nfilters <- listFilters(dog)\natt <- listAttributes(dog)\nhuman.attributes <- listAttributes(human)\n\n#---------------Mesenchymal Markers---------------------------------------------------\nmesenchymalMarkers<- c(\"FN1\" = \"ENSCAFG00000014345\", \n                       \"ZEB1\" = \"ENSCAFG00000004023\", \n                       \"TGFb1\" = \"ENSCAFG00000005014\",\n                       \"TGFb3\" = \"ENSCAFG00000017101\",\n                       \"SPARC\" = \"ENSCAFG00000017855\", \n                       \"TWIST2\" = \"ENSCAFG00000012469\"\n                       )\n\nmesenchymalMarkers.transcripts.tab <- getBM(attributes = c(\"ensembl_gene_id\",\n                                                           \"ensembl_transcript_id\",\n                                                           \"chromosome_name\",\n                                                           \"start_position\",\n                                                           \"end_position\",\n                                                           \"transcript_start\",\n                                                           \"hgnc_symbol\",\n                                                           \"external_transcript_name\",\n                                                           \"strand\"),\n                                            filters = \"ensembl_gene_id\",\n                                            values = mesenchymalMarkers, dog)\n\nmesenchymalMarkers.transcripts.tab$marker <- \"mesenchymal\"\n\nmesenchymalMarkers.genes.tab <- getBM(attributes = c(\"ensembl_gene_id\",\n                                                     \"entrezgene\",\n                                                     \"chromosome_name\",\n                                                     \"start_position\",\n                                                     \"end_position\",\n                                                     \"hgnc_symbol\",\n                                                     \"description\",\n                                                     \"strand\"),\n                                            filters = \"ensembl_gene_id\",\n                                            values = mesenchymalMarkers, dog)\nmesenchymalMarkers.genes.tab$marker <- \"mesenchymal\"\n\n# get human homologs of these dog genes\nmesenchymalMarkers.Hsap.homologs <- getBM(attributes = c(\"ensembl_gene_id\",\n                                                        \"hsapiens_homolog_ensembl_gene\"),\n                                         filters = \"ensembl_gene_id\",\n                                         values = mesenchymalMarkers, dog)\nmesenchymalMarkers.Hsap.homologs.EntrezIDs <- getBM(attributes = c(\"ensembl_gene_id\",\n                                                                  \"entrezgene\",\n                                                                  \"hgnc_symbol\"),\n                                                   filters = \"ensembl_gene_id\",\n                                                   values = mesenchymalMarkers.Hsap.homologs$hsapiens_homolog_ensembl_gene, human)\nmesenchymalMarkers.Hsap.homologs.EntrezIDs$marker <- \"mesenchymal\"\n\ngr.mesenchymalMarkers <- GRanges(seqnames = mesenchymalMarkers.transcripts.tab$chromosome_name, \n                                IRanges(mesenchymalMarkers.transcripts.tab$start_position, \n                                        mesenchymalMarkers.transcripts.tab$end_position), \n                                strand = c(\"-\", \"+\")[match(mesenchymalMarkers.transcripts.tab$strand, c(\"-1\", \"1\"))],\n                                mesenchymalMarkers.transcripts.tab[,c(\"ensembl_gene_id\", \n                                                                      \"ensembl_transcript_id\", \n                                                                      \"hgnc_symbol\", \n                                                                      \"transcript_start\", \n                                                                      \"external_transcript_name\", \n                                                                      \"marker\")])\n\ngr.mesenchymalMarkers$hgnc_symbol[3:5] <- paste(gr.mesenchymalMarkers$hgnc_symbol[3:5], \"(TGFB-1)\", sep = \" \")\n\ngr.mesenchymalMarkers.genes <-  GRanges(seqnames = mesenchymalMarkers.genes.tab$chromosome_name, \n                                        IRanges(mesenchymalMarkers.genes.tab$start_position, \n                                                mesenchymalMarkers.genes.tab$end_position), \n                                        strand = c(\"-\", \"+\")[match(mesenchymalMarkers.genes.tab$strand, c(\"-1\", \"1\"))],\n                                        mesenchymalMarkers.genes.tab[,c(\"ensembl_gene_id\", \n                                                                        \"entrezgene\", \n                                                                        \"hgnc_symbol\", \n                                                                        \"description\", \n                                                                        \"marker\")])\ngr.mesenchymalMarkers.genes$hgnc_symbol[2:3] <- paste(gr.mesenchymalMarkers.genes$hgnc_symbol[2:3], \"(TGFB-1)\", sep = \" \")\n\n\n#---------------Epithelial Markers---------------------------------------------------\nepithelialMarkers <- c(\"CDH1\" = \"ENSCAFG00000020305\",\n                       \"SPP1\" = \"ENSCAFG00000009569\",\n                       \"FGFBP1\" = \"ENSCAFG00000015272\",\n                       \"MMP9\" = \"ENSCAFG00000009905\",\n                       \"EPCAM\" = \"ENSCAFG00000002653\")\n\nepithelialMarkers.transcripts.tab <- getBM(attributes = c(\"ensembl_gene_id\",\n                                                          \"ensembl_transcript_id\",\n                                                          \"entrezgene\",\n                                                          \"chromosome_name\",\n                                                          \"start_position\",\n                                                          \"end_position\",\n                                                          \"transcript_start\",\n                                                          \"hgnc_symbol\",\n                                                          \"strand\",\n                                                          \"external_transcript_name\"),\n                                           filters = \"ensembl_gene_id\",\n                                           values = epithelialMarkers, dog)\nepithelialMarkers.transcripts.tab$marker <- \"epithelial\"\n\nepithelialMarkers.genes.tab <- getBM(attributes = c(\"ensembl_gene_id\",\n                                                    \"entrezgene\",\n                                                    \"chromosome_name\",\n                                                    \"start_position\",\n                                                    \"end_position\",\n                                                    \"hgnc_symbol\",\n                                                    \"strand\"),\n                                     filters = \"ensembl_gene_id\",\n                                     values = epithelialMarkers, dog)\nepithelialMarkers.genes.tab$marker <- \"epithelial\"\n\n# get human homologs of these dog genes\nepithelialMarkers.Hsap.homologs <- getBM(attributes = c(\"ensembl_gene_id\",\n                                                        \"hsapiens_homolog_ensembl_gene\"),\n                                         filters = \"ensembl_gene_id\",\n                                         values = epithelialMarkers, dog)\nepithelialMarkers.Hsap.homologs.EntrezIDs <- getBM(attributes = c(\"ensembl_gene_id\",\n                                                                  \"entrezgene\",\n                                                                  \"hgnc_symbol\"),\n                                                   filters = \"ensembl_gene_id\",\n                                                   values = epithelialMarkers.Hsap.homologs$hsapiens_homolog_ensembl_gene, human)\nepithelialMarkers.Hsap.homologs.EntrezIDs$marker <- \"epithelial\"\n\ngr.epithelialMarkers <- GRanges(seqnames = epithelialMarkers.transcripts.tab$chromosome_name, \n                                IRanges(epithelialMarkers.transcripts.tab$start_position, \n                                        epithelialMarkers.transcripts.tab$end_position), \n                                strand = c(\"-\", \"+\")[match(epithelialMarkers.transcripts.tab$strand, c(\"-1\", \"1\"))],\n                                epithelialMarkers.transcripts.tab[,c(\"ensembl_gene_id\", \n                                                                     \"ensembl_transcript_id\", \n                                                                     \"hgnc_symbol\", \n                                                                     \"transcript_start\", \n                                                                     \"marker\",\n                                                                     \"external_transcript_name\")])\n\ngr.epithelialMarkers.genes <-  GRanges(seqnames = epithelialMarkers.genes.tab$chromosome_name, \n                                        IRanges(epithelialMarkers.genes.tab$start_position, \n                                                epithelialMarkers.genes.tab$end_position), \n                                        strand = c(\"-\", \"+\")[match(epithelialMarkers.genes.tab$strand, c(\"-1\", \"1\"))],\n                                        epithelialMarkers.genes.tab[,c(\"ensembl_gene_id\", \n                                                                       \"entrezgene\",\n                                                                       \"hgnc_symbol\", \n                                                                       \"marker\")])\n\n\n#--------------add TGFb-------------------------------------------------------\n# TGFb.Hsap <- \"ENSG00000105329\"\n# TGFb.Hsap <- getBM(attributes = c(\"ensembl_gene_id\",\n#                                   \"entrezgene\",\n#                                   \"hgnc_symbol\"),\n#                    filters = \"ensembl_gene_id\",\n#                    values = TGFb.Hsap, human)\n# \n# getBM(attributes = c(\"ensembl_gene_id\",\n#                      \"cfamiliaris_homolog_ensembl_gene\"),\n#       filters = \"ensembl_gene_id\",\n#       values = TGFb.Hsap$ensembl_gene_id, human)\n\n#-------------put together GRanges object for reading BAM files---------------\ngr.which <- c(promoters(reduce(gr.mesenchymalMarkers), upstream = 400000, downstream = 400000),\n              promoters(reduce(gr.epithelialMarkers), upstream = 400000, downstream = 400000))\n\n# setting chromosome info\nseqlevels(gr.which) <- paste(\"chr\", seqlevels(gr.which), sep = \"\")\nseqinfo(gr.which, force = T) <- seqinfo(BSgenome.Cfamiliaris.UCSC.canFam3)[seqlevels(gr.which)]\nseqlevels(gr.which) <- gsub(\"chr\", \"\", seqlevels(gr.which))\n\n# load whole chromosome\n# start(gr.which) <- 1\n# end(gr.which) <- as.vector(seqlengths(gr.which))\n\n# extending CDH1 region\n# start(gr.which[10]) <- start(gr.which[10]) - 150000\n# strand(gr.which) <- \"*\"\n# save(gr.which, file = \"gr.which.rda\")\n\n#-----------------------importing data from BAM files-------------------------------------------\n# working with BAM files\n# on GDU cluster\n#path = \"/Volumes/MHS/researchdata/JCSMR/TremethickLab/Illumina_Sequencing/MDCK_ChIPSeq/\"\n\n#path.input = \"/Volumes/gduserv/Data/Tremethick/EMT/GenomeWide/Input/processed_data/duplicates_marked/\"\npath.input = \"~/Data/Tremethick/EMT/GenomeWide/Input/processed_data/duplicates_marked/\"\n#path.h2az = \"/Volumes/gduserv/Data/Tremethick/EMT/GenomeWide/H2AZ/processed_data/duplicates_marked/\"\npath.h2az = \"~/Data/Tremethick/EMT/GenomeWide/H2AZ/processed_data/duplicates_marked/\"\n\nsuffix = \".Q10.sorted.MkDup.bam\"\n\nfiles.input = c(\"Input_TGFb_rep1_S7\", \"Input_TGFb_rep2_S8\", \"Input_WT_rep1_S5\", \"Input_WT_rep2_S6\")\nfiles.h2az = c(\"H2AZ_TGFb_rep1_S3\", \"H2AZ_TGFb_rep2_S4\", \"H2AZ_WT_rep1_S1\", \"H2AZ_WT_rep2_S2\")\n#files.input <- c(\"Input_TGFb\", \"Input_WT\")\n#files.h2az <- c(\"H2AZ_TGFb\", \"H2AZ_WT\")\n\n# parameters for reading in BAM files\n# flag <- scanBamFlag(isProperPair = T, isPaired = T, isDuplicate = F, isSecondaryAlignment = F)#, isFirstMateRead = T, isSecondMateRead = F)\nflag <- scanBamFlag(isProperPair = T, isDuplicate = F)\nSBParam.all <- ScanBamParam(flag = flag, simpleCigar = T, what = c(\"rname\", \"strand\", \"pos\", \"qwidth\")) #\nSBParam <- ScanBamParam(flag = flag, simpleCigar = T, what = c(\"rname\", \"strand\", \"pos\", \"qwidth\")) #, which = gr.which)\n\ncounts.input <- lapply(files.input, function(x){\n  fn <- paste(path.input, x, suffix, sep = \"\")\n  print(fn)\n  countBam(fn, param = SBParam.all)\n})\nnames(counts.input) <- files.input\n\ncounts.h2az <- lapply(files.h2az, function(x){\n  fn <- paste(path.h2az, x, suffix, sep = \"\")\n  print(fn)\n  countBam(fn, param = SBParam.all)\n})\nnames(counts.h2az) <- files.h2az\n\n# calculate scaling factors per sample (RPM)\nscale.input <- lapply(counts.input, function(x) {1000000/x$records})\nscale.h2az <- lapply(counts.h2az, function(x) {1000000/x$records})\n\n# import reads\n# and calculate coverage\n# and scale it according to total library size\n# Input\ncoverage.input <- lapply(files.input, function(x){\n  fn <- paste(path.input, x, suffix, sep = \"\")\n  fn.temp <- paste(fn, \"temp\", sep = \"\")\n  print(fn)\n  filterBam(fn, fn.temp , param = ScanBamParam(what = c(\"rname\", \"strand\", \"pos\", \"qwidth\"), which = gr.which))\n  rap <- readGAlignmentPairs(fn.temp, use.names = TRUE)\n  rap <- as(rap, \"GRanges\")\n  file.remove(fn.temp)\n  file.remove(paste(fn.temp, \"bai\", sep = \".\"))\n  coverage(rap) * scale.input[[x]]\n})\nnames(coverage.input) <- files.input\n\n# H2AZ ChIP\ncoverage.h2az <- lapply(files.h2az, function(x){\n  fn <- paste(path.h2az, x, suffix, sep = \"\")\n  fn.temp <- paste(fn, \"temp\", sep = \"\")\n  print(fn)\n  filterBam(fn, fn.temp , param = ScanBamParam(what = c(\"rname\", \"strand\", \"pos\", \"qwidth\"), which = gr.which))\n  rap <- readGAlignmentPairs(fn.temp, use.names = TRUE)\n  rap <- as(rap, \"GRanges\")\n  file.remove(fn.temp)\n  file.remove(paste(fn.temp, \"bai\", sep = \".\"))\n  coverage(rap) * scale.h2az[[x]]\n})\nnames(coverage.h2az) <- files.h2az\n\n# calculate coverage from replicates, applying scaling factor (RPM)\ncov.input.emt_markers.wt <- (coverage.input[[\"Input_WT_rep1_S5\"]] + coverage.input[[\"Input_WT_rep2_S6\"]]) /2\ncov.input.emt_markers.tgfb <- (coverage.input[[\"Input_TGFb_rep1_S7\"]] + coverage.input[[\"Input_TGFb_rep2_S8\"]]) /2\ncov.h2az.emt_markers.wt <- (coverage.h2az[[\"H2AZ_WT_rep1_S1\"]] + coverage.h2az[[\"H2AZ_WT_rep2_S2\"]]) / 2\ncov.h2az.emt_markers.tgfb <- (coverage.h2az[[\"H2AZ_TGFb_rep1_S3\"]] + coverage.h2az[[\"H2AZ_TGFb_rep2_S4\"]]) / 2\n\n#----------preparing data for plotting of sequencing coverage--------------\n# calculate binned averages from the 1bp-resolution coverage objects\nbA.cov.input.emt_markers.wt <- calculateCoverage(step = 1, gr.which, cov.input.emt_markers.wt, func = \"mean\")\nbA.cov.input.emt_markers.tgfb <- calculateCoverage(step = 1, gr.which, cov.input.emt_markers.tgfb, func = \"mean\")\nbA.cov.h2az.emt_markers.wt <- calculateCoverage(step = 1, gr.which, cov.h2az.emt_markers.wt, func = \"mean\")\nbA.cov.h2az.emt_markers.tgfb <- calculateCoverage(step = 1, gr.which, cov.h2az.emt_markers.tgfb, func = \"mean\")\n\n#----------creating DataTrack objects for visualization using Gviz------------------------------\ndT.cov.input.emt_markers.wt <- DataTrack(bA.cov.input.emt_markers.wt, type = \"h\", col = \"darkgreen\", name = \"Input WT\\n[rpm]\", strand = \"*\")\ndT.cov.input.emt_markers.tgfb <- DataTrack(bA.cov.input.emt_markers.tgfb, type = \"h\", col = \"lightgreen\", name = \"Input TGFb\\n[rpm]\", strand = \"*\")\ndT.cov.h2az.emt_markers.wt <- DataTrack(bA.cov.h2az.emt_markers.wt, type = \"h\", col = \"darkred\", name = \"H2AZ WT\\n[rpm]\", strand = \"*\")\ndT.cov.h2az.emt_markers.tgfb <- DataTrack(bA.cov.h2az.emt_markers.tgfb, type = \"h\", col = \"red\", name = \"H2AZ TGFb\\n[rpm]\", strand = \"*\")\n\ndpList <- list(\"fontcolor.title\" = \"black\", \"background.title\" = \"white\", \"col.axis\" = \"black\", \"col.frame\" = \"white\", \"cex.title\" = 0.4, rotation.title = 270, cex.axis = 0.6)\n\ndisplayPars(dT.cov.input.emt_markers.wt) <- dpList\ndisplayPars(dT.cov.input.emt_markers.tgfb) <- dpList\ndisplayPars(dT.cov.h2az.emt_markers.wt) <- dpList\ndisplayPars(dT.cov.h2az.emt_markers.tgfb) <- dpList\n\nsave(file = \"genomeWide.50kbTSS.DataTracks.rda\", list = c(\"dT.cov.input.emt_markers.wt\", \"dT.cov.input.emt_markers.tgfb\", \"dT.cov.h2az.emt_markers.wt\", \"dT.cov.h2az.emt_markers.tgfb\"))\n\n#-----------plotting coverage across epithelial markers------------------------------------------\n\ndT.bgSubTGFb <- DataTrack(\"~/Data/Tremethick/EMT/GenomeWide/danpos_analysis/TGFb_vs_WT/pooled/TGFb_ChIP.bgsub.Fnor.smooth.bw\", stream = T, name = \"TGFb - background subtracted\", col = \"black\", type = \"l\")\ndT.bgSubWT <- DataTrack(\"~/Data/Tremethick/EMT/GenomeWide/danpos_analysis/TGFb_vs_WT/pooled/WT_ChIP.bgsub.Fnor.smooth.bw\", stream = T, name = \"WT - background subtracted\", col = \"grey\", type = \"l\")\ndT.Diff <- DataTrack(\"~/Data/Tremethick/EMT/GenomeWide/danpos_analysis/TGFb_vs_WT/diff/TGFb_vs_WT.pois_diff.bw\", stream = T, name = \"Difference - DANPOS2\", col = \"blue\", type = \"l\")\n\ngr.plot <- promoters(gr.mesenchymalMarkers, up = 1500, down = 20000)\ngr.plot <- promoters(gr.epithelialMarkers.genes, upstream = 20000, downstream = 20000)\n\nbiomTrack <- GeneRegionTrack(TxDb.Cfam3.Ensembl, showId = T, geneSymbol = T, showExonId = F, name = \"\", stacking = \"hide\")\ndisplayPars(biomTrack) <- list(\"fontcolor.title\" = \"black\", \"background.title\" = \"white\", \"col.axis\" = \"black\", \"col.frame\" = \"white\")\nsave(biomTrack, file = \"biomTrack.Cfam3.Ensembl.rda\")\n\npdf(\"~/OneDrive/Documents/ANU/Tremethick Lab/Lab Meetings/Lab Meeting 2015-10-14/MDCK_ChIP-Seq_EpitheliaMarkers_coverage_plots_1500TSS1500_incl_DMRs_incl_SureSelect.pdf\")\nfor (i in 1:length(gr.plot)){\n  displayPars(biomTrack) <- list(\"fontcolor.title\" = \"black\", \"background.title\" = \"white\", \"col.axis\" = \"black\", \"col.frame\" = \"white\")\n  \n  # Data from SureSelect capture\n#   chromosome(dT.cov.input.wt) <- seqnames(gr.plot)[i]\n#   chromosome(dT.cov.input.tgfb) <- seqnames(gr.plot)[i]\n#   chromosome(dT.cov.h2az.wt) <- seqnames(gr.plot)[i]\n#   chromosome(dT.cov.h2az.tgfb) <- seqnames(gr.plot)[i]\n#   \n#   chromosome(aT.primers) <- seqnames(gr.plot)[i]\n#   \n#   max.y <- max(max(values(dT.cov.input.wt)), max(values(dT.cov.input.tgfb)), max(values(dT.cov.h2az.wt)), max(values(dT.cov.h2az.tgfb)))\n#   displayPars(dT.cov.input.wt) <- list(ylim = c(0,max.y))\n#   displayPars(dT.cov.input.tgfb) <- list(ylim = c(0,max.y))\n#   displayPars(dT.cov.h2az.wt) <- list(ylim = c(0,max.y))\n#   displayPars(dT.cov.h2az.tgfb) <- list(ylim = c(0,max.y))\n#   \n  # Data from whole genome ChIP-Seq\n  \n  chromosome(dT.cov.input.emt_markers.wt) <- seqnames(gr.plot)[i]\n  chromosome(dT.cov.input.emt_markers.tgfb) <- seqnames(gr.plot)[i]\n  chromosome(dT.cov.h2az.emt_markers.wt) <- seqnames(gr.plot)[i]\n  chromosome(dT.cov.h2az.emt_markers.tgfb) <- seqnames(gr.plot)[i]\n  \n  max.y.tss <- max(max(values(dT.cov.input.emt_markers.wt)), max(values(dT.cov.input.emt_markers.tgfb)), max(values(dT.cov.h2az.emt_markers.wt)), max(values(dT.cov.h2az.emt_markers.tgfb)))\n  displayPars(dT.cov.input.emt_markers.wt) <- list(ylim = c(0,max.y.tss))\n  displayPars(dT.cov.input.emt_markers.tgfb) <- list(ylim = c(0,max.y.tss))\n  displayPars(dT.cov.h2az.emt_markers.wt) <- list(ylim = c(0,max.y.tss))\n  displayPars(dT.cov.h2az.emt_markers.tgfb) <- list(ylim = c(0,max.y.tss))\n  \n  plotTracks(list(axisTrack,\n                  biomTrack,\n                  aT.ap1Sites,\n                  aT.nfkbSites,\n                  aT.TSS,\n                  dT.cov.input.emt_markers.wt, \n                  dT.cov.h2az.emt_markers.wt,\n                  dT.cov.input.emt_markers.tgfb, \n                  dT.cov.h2az.emt_markers.tgfb\n\n  ),\n  chromosome = as(seqnames(gr.plot), \"character\")[i],\n  from = as.integer(start(gr.plot[i]), \"integer\"),\n  to = as.integer(end(gr.plot[i]), \"integer\"),\n  extend.right = 1000,\n  extend.left = 1000,\n  main = paste(gr.plot$hgnc_symbol[i], \" (\", width(gr.plot[i]), \"bp)\", sep = \"\"),\n  strand = \"*\",\n  cex.main = 0.5,\n  sizes = c(0.02, 0.06, 0.04, 0.04, 0.04, 0.2, 0.2, 0.2, 0.2),\n  scale = 0.5)\n\n}\ndev.off()\n\n# mesenchymal markers\ngr.mesenchymalMarkers.1500TSS1500 <- promoters(gr.mesenchymalMarkers, upstream = 1500, downstream = 1500)\n\npdf(\"~/OneDrive/Documents/ANU/Tremethick Lab/Lab Meetings/Lab Meeting 2015-10-14/MDCK_ChIP-Seq_MesenchymalMarkers_coverage_plots_1500TSS1500_incl_DMRs_incl_SureSelect.pdf\")\nfor (i in 1:length(gr.mesenchymalMarkers.1500TSS1500)){\n  biomTrack <- BiomartGeneRegionTrack(genome = \"canFam3\", \n                                      chromosome = as(seqnames(gr.mesenchymalMarkers.1500TSS1500), \"character\")[i],\n                                      start = as.integer(start(gr.mesenchymalMarkers.1500TSS1500[i]), \"integer\"),\n                                      end = as.integer(end(gr.mesenchymalMarkers.1500TSS1500[i]), \"integer\"),\n                                      name = paste(mcols(gr.mesenchymalMarkers.1500TSS1500[i])$hgnc_symbol, \"transcript\",  mcols(gr.mesenchymalMarkers.1500TSS1500[i])$ensembl_transcript_id, sep = \" \"),\n                                      mart = dog)\n  \n  displayPars(biomTrack) <- list(\"fontcolor.title\" = \"black\", \"background.title\" = \"white\", \"col.axis\" = \"black\", \"col.frame\" = \"white\")\n  \n  # Data from SureSelect capture\n  chromosome(dT.cov.input.wt) <- seqnames(gr.mesenchymalMarkers.1500TSS1500)[i]\n  chromosome(dT.cov.input.tgfb) <- seqnames(gr.mesenchymalMarkers.1500TSS1500)[i]\n  chromosome(dT.cov.h2az.wt) <- seqnames(gr.mesenchymalMarkers.1500TSS1500)[i]\n  chromosome(dT.cov.h2az.tgfb) <- seqnames(gr.mesenchymalMarkers.1500TSS1500)[i]\n  \n  chromosome(aT.primers) <- seqnames(gr.mesenchymalMarkers.1500TSS1500)[i]\n  \n  max.y <- max(max(values(dT.cov.input.wt)), max(values(dT.cov.input.tgfb)), max(values(dT.cov.h2az.wt)), max(values(dT.cov.h2az.tgfb)))\n  displayPars(dT.cov.input.wt) <- list(ylim = c(0,max.y))\n  displayPars(dT.cov.input.tgfb) <- list(ylim = c(0,max.y))\n  displayPars(dT.cov.h2az.wt) <- list(ylim = c(0,max.y))\n  displayPars(dT.cov.h2az.tgfb) <- list(ylim = c(0,max.y))\n  \n  chromosome(dT.cov.input.emt_markers.wt) <- seqnames(gr.mesenchymalMarkers.1500TSS1500)[i]\n  chromosome(dT.cov.input.emt_markers.tgfb) <- seqnames(gr.mesenchymalMarkers.1500TSS1500)[i]\n  chromosome(dT.cov.h2az.emt_markers.wt) <- seqnames(gr.mesenchymalMarkers.1500TSS1500)[i]\n  chromosome(dT.cov.h2az.emt_markers.tgfb) <- seqnames(gr.mesenchymalMarkers.1500TSS1500)[i]\n  \n  max.y.tss <- max(max(values(dT.cov.input.emt_markers.wt)), max(values(dT.cov.input.emt_markers.tgfb)), max(values(dT.cov.h2az.emt_markers.wt)), max(values(dT.cov.h2az.emt_markers.tgfb)))\n  displayPars(dT.cov.input.emt_markers.wt) <- list(ylim = c(0,max.y.tss))\n  displayPars(dT.cov.input.emt_markers.tgfb) <- list(ylim = c(0,max.y.tss))\n  displayPars(dT.cov.h2az.emt_markers.wt) <- list(ylim = c(0,max.y.tss))\n  displayPars(dT.cov.h2az.emt_markers.tgfb) <- list(ylim = c(0,max.y.tss))\n  \n  \n  plotTracks(list(axisTrack,\n                  biomTrack,\n                  aT.ap1Sites,\n                  aT.nfkbSites,\n                  aT.primers,\n                  dT.cov.input.emt_markers.wt, \n                  dT.cov.h2az.emt_markers.wt,\n                  dT.cov.input.wt,\n                  dT.cov.h2az.wt,\n                  dT.cov.input.emt_markers.tgfb, \n                  dT.cov.h2az.emt_markers.tgfb,\n                  dT.cov.input.tgfb,\n                  dT.cov.h2az.tgfb,\n                  dT.dmr\n  ),\n  chromosome = as(seqnames(gr.mesenchymalMarkers.1500TSS1500), \"character\")[i],\n  from = as.integer(start(gr.mesenchymalMarkers.1500TSS1500[i]), \"integer\"),\n  to = as.integer(end(gr.mesenchymalMarkers.1500TSS1500[i]), \"integer\"),\n  extend.right = 1000,\n  extend.left = 1000,\n  main = mcols(gr.mesenchymalMarkers.1500TSS1500[i])$hgnc_symbol,\n  strand = \"*\",\n  cex.main = 0.5,\n  sizes = c(0.01, 0.04, 0.02, 0.02, 0.01, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.05),\n  scale = 0.5)\n \n}\ndev.off()\n\n \n# whole 50kb region\ngr.mesenchymalMarkers.genes.25kbTSS25kb <- promoters(gr.mesenchymalMarkers.genes, upstream = 20000, downstream = 20000)\n\npdf(\"~/OneDrive/Documents/ANU/Tremethick Lab/Lab Meetings/Lab Meeting 2015-10-14/MDCK_ChIP-Seq_MesenchymalMarkers_coverage_plots_20kbTSS20kb_incl_DMRs_incl_SureSelect.pdf\", height = 10, width = 15)\nfor (i in 1:length(gr.mesenchymalMarkers.genes.25kbTSS25kb)){\n  biomTrack <- BiomartGeneRegionTrack(genome = \"canFam3\", \n                                      chromosome = as(seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb), \"character\")[i],\n                                      start = as.integer(start(gr.mesenchymalMarkers.genes.25kbTSS25kb[i]), \"integer\"),\n                                      end = as.integer(end(gr.mesenchymalMarkers.genes.25kbTSS25kb[i]), \"integer\"),\n                                      name = mcols(gr.mesenchymalMarkers.genes.25kbTSS25kb[i])$hgnc_symbol,\n                                      mart = dog)\n  displayPars(biomTrack) <- list(showFeatureId = TRUE, showId = TRUE, \"fontcolor.title\" = \"black\", \"background.title\" = \"white\", \"col.axis\" = \"black\", \"col.frame\" = \"white\")\n  \n  # Data from SureSelect capture\n  chromosome(dT.cov.input.wt) <- seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb)[i]\n  chromosome(dT.cov.input.tgfb) <- seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb)[i]\n  chromosome(dT.cov.h2az.wt) <- seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb)[i]\n  chromosome(dT.cov.h2az.tgfb) <- seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb)[i]\n  \n  chromosome(aT.primers) <- seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb)[i]\n  \n  max.y <- max(max(values(dT.cov.input.wt)), max(values(dT.cov.input.tgfb)), max(values(dT.cov.h2az.wt)), max(values(dT.cov.h2az.tgfb)))\n  displayPars(dT.cov.input.wt) <- list(ylim = c(0,max.y))\n  displayPars(dT.cov.input.tgfb) <- list(ylim = c(0,max.y))\n  displayPars(dT.cov.h2az.wt) <- list(ylim = c(0,max.y))\n  displayPars(dT.cov.h2az.tgfb) <- list(ylim = c(0,max.y))\n  \n  chromosome(dT.cov.input.emt_markers.wt) <- seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb)[i]\n  chromosome(dT.cov.input.emt_markers.tgfb) <- seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb)[i]\n  chromosome(dT.cov.h2az.emt_markers.wt) <- seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb)[i]\n  chromosome(dT.cov.h2az.emt_markers.tgfb) <- seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb)[i]\n  \n  max.y.tss <- max(max(values(dT.cov.input.emt_markers.wt)), max(values(dT.cov.input.emt_markers.tgfb)), max(values(dT.cov.h2az.emt_markers.wt)), max(values(dT.cov.h2az.emt_markers.tgfb)))\n  displayPars(dT.cov.input.emt_markers.wt) <- list(ylim = c(0,max.y.tss))\n  displayPars(dT.cov.input.emt_markers.tgfb) <- list(ylim = c(0,max.y.tss))\n  displayPars(dT.cov.h2az.emt_markers.wt) <- list(ylim = c(0,max.y.tss))\n  displayPars(dT.cov.h2az.emt_markers.tgfb) <- list(ylim = c(0,max.y.tss))\n\n  plotTracks(list(axisTrack,\n                  biomTrack,\n                  aT.ap1Sites,\n                  aT.nfkbSites,\n                  aT.primers,\n                  dT.cov.input.emt_markers.wt, \n                  dT.cov.h2az.emt_markers.wt,\n                  dT.cov.input.wt,\n                  dT.cov.h2az.wt,\n                  dT.cov.input.emt_markers.tgfb, \n                  dT.cov.h2az.emt_markers.tgfb,\n                  dT.cov.input.tgfb,\n                  dT.cov.h2az.tgfb,\n                  dT.dmr\n                ),\n             chromosome = as(seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb), \"character\")[i],\n             from = as.integer(start(gr.mesenchymalMarkers.genes.25kbTSS25kb[i]), \"integer\"),\n             to = as.integer(end(gr.mesenchymalMarkers.genes.25kbTSS25kb[i]), \"integer\"),\n             extend.right = 1000,\n             extend.left = 1000,\n             main = mcols(gr.mesenchymalMarkers.genes.25kbTSS25kb[i])$hgnc_symbol,\n             strand = \"*\",\n             cex.main = 0.5,\n             sizes = c(0.01, 0.04, 0.02, 0.02, 0.01, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.05),\n             scale = 0.5)\n}\ndev.off()\n\n# \n# Input_TGFb_rep1 <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/TGFb_rep1/NA_control_lambda.bw\"), gr.which)\n# H2AZ_TGFb_rep1 <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/TGFb_rep1/NA_treat_pileup.bw\"), gr.which)\n# H2AZ_TGFb_rep1_FE <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/TGFb_rep1/H2AZ_TGFb_rep1_FE.bw\"), gr.which)\n# H2AZ_TGFb_rep1_logLR <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/TGFb_rep1/H2AZ_TGFb_rep1_logLR.bw\"), gr.which)\n# \n# Input_TGFb_rep2 <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/TGFb_rep2/NA_control_lambda.bw\"), gr.which)\n# H2AZ_TGFb_rep2 <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/TGFb_rep2/NA_treat_pileup.bw\"), gr.which)\n# H2AZ_TGFb_rep2_FE <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/TGFb_rep2/H2AZ_TGFb_rep2_FE.bw\"), gr.which)\n# H2AZ_TGFb_rep2_logLR <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/TGFb_rep2/H2AZ_TGFb_rep2_logLR.bw\"), gr.which)\n# \n# Input_WT_rep1 <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/WT_rep1/NA_control_lambda.bw\"), gr.which)\n# H2AZ_WT_rep1 <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/WT_rep1/NA_treat_pileup.bw\"), gr.which)\n# H2AZ_WT_rep1_FE <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/WT_rep1/H2AZ_WT_rep1_FE.bw\"), gr.which)\n# H2AZ_WT_rep1_logLR <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/WT_rep1/H2AZ_WT_rep1_logLR.bw\"), gr.which)\n# \n# Input_WT_rep2 <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/WT_rep2/NA_control_lambda.bw\"), gr.which)\n# H2AZ_WT_rep2 <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/WT_rep2/NA_treat_pileup.bw\"), gr.which)\n# H2AZ_WT_rep2_FE <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/WT_rep2/H2AZ_WT_rep2_FE.bw\"), gr.which)\n# H2AZ_WT_rep2_logLR <- subsetByOverlaps(import(\"~/Data/Tremethick/EMT/GenomeWide/macs2_analysis/WT_rep2/H2AZ_WT_rep2_logLR.bw\"), gr.which)\nplotTracks(list(biomTrack,\n                aT.ap1Sites,\n                aT.nfkbSites,\n                dT.cov.input.emt_markers.wt\n#                 dT.cov.h2az.emt_markers.wt,\n#                 dT.cov.input.wt,\n#                 dT.cov.h2az.wt,\n#                 dT.cov.input.emt_markers.tgfb, \n#                 dT.cov.h2az.emt_markers.tgfb,\n#                 dT.cov.input.tgfb,\n#                 dT.cov.h2az.tgfb,\n#                 dT.dmr\n),\nchromosome = as(seqnames(gr.mesenchymalMarkers.genes.25kbTSS25kb), \"character\")[i],\nfrom = as.integer(start(gr.mesenchymalMarkers.genes.25kbTSS25kb[i]), \"integer\"),\nto = as.integer(end(gr.mesenchymalMarkers.genes.25kbTSS25kb[i]), \"integer\"),\nextend.right = 1000,\nextend.left = 1000)\n\n\n# plot histograms of insert sizes\npar(mfrow = c(2,2))\nlapply(seq_along(reads.input), function(x, i, n) {\n  w1 <- width(as(x[[i]], \"GRanges\"))\n  med <- median(w1)\n  title <- n[[i]]\n  hist(w1, \n       main = title,\n       xlab = \"Insert size [bp]\\n (min, median, max)\",\n       axes = F)\n  abline(v = med, col = \"red\")\n  axis(1, at = c(median(w1)), col = c(\"red\"), lty = NULL, col.lab = \"red\")\n  axis(1, at = c(min(w1), max(w1)), col = c(\"black\"))\n  axis(2)\n}, x = reads.input, n = names(reads.input))\n\n\npar(mfrow = c(2,2))\nlapply(seq_along(reads.h2az), function(x, i, n) {\n  w1 <- width(as(x[[i]], \"GRanges\"))\n  med <- median(w1)\n  title <- n[[i]]\n  hist(w1, \n       main = title,\n       xlab = \"Insert size [bp]\\n (min, median, max)\",\n       axes = F)\n  abline(v = med, col = \"red\")\n  axis(1, at = c(median(w1)), col = c(\"red\"), lty = NULL, col.lab = \"red\")\n  axis(1, at = c(min(w1), max(w1)), col = c(\"black\"))\n  axis(2)\n}, x = reads.h2az, n = names(reads.h2az))\n\n#-------------loading MACS2 peak calling results----------------------\nmacs2_path <- \"/Volumes/gduserv/Data/Tremethick/EMT/GenomeWide/macs2_analysis\"\n\nPeaks_WT <- read.table(paste(macs2_path, \"NA_peaks.narrowPeak\", sep = \"/WT/\"), header = F, as.is = T, sep = \"\\t\")\nPeaks_WT <- GRanges(Peaks_WT$V1, IRanges(Peaks_WT$V2, Peaks_WT$V3), names = Peaks_WT$V4, mcols = Peaks_WT[, c(\"V5\", \"V6\", \"V7\", \"V8\", \"V9\", \"V10\")])\nPeaks_WT <- subsetByOverlaps(Peaks_WT, gr.which)\nseqlevels(Peaks_WT, force = T) <- seqlevels(gr.which)\n\nSummits_WT <- import(paste(macs2_path, \"NA_summits.bed\", sep = \"/WT/\"))\nSummits_WT <- subsetByOverlaps(Summits_WT, gr.which)\nseqlevels(Summits_WT, force = T) <- seqlevels(gr.which)\n\nPeaks_TGFb <- read.table(paste(macs2_path, \"NA_peaks.narrowPeak\", sep = \"/TGFb/\"), header = F, as.is = T, sep = \"\\t\")\nPeaks_TGFb <- GRanges(Peaks_TGFb$V1, IRanges(Peaks_TGFb$V2, Peaks_TGFb$V3), names = Peaks_TGFb$V4, mcols = Peaks_TGFb[, c(\"V5\", \"V6\", \"V7\", \"V8\", \"V9\", \"V10\")])\nPeaks_TGFb <- subsetByOverlaps(Peaks_TGFb, gr.which)\nseqlevels(Peaks_TGFb, force = T) <- seqlevels(gr.which)\n\nSummits_TGFb <- import(paste(macs2_path, \"NA_summits.bed\", sep = \"/TGFb/\"))\nSummits_TGFb <- subsetByOverlaps(Summits_TGFb, gr.which)\nseqlevels(Summits_TGFb, force = T) <- seqlevels(gr.which)\n\nDiffPeaks_WT <- import(paste(macs2_path, \"diff_WT_vs_TGFb_c3.0_cond1.bed\", sep = \"/\"))\nDiffPeaks_WT <- subsetByOverlaps(DiffPeaks_WT, gr.which)\nseqlevels(DiffPeaks_WT, force = T) <- seqlevels(gr.which)\n\nDiffPeaks_TGFb <- import(paste(macs2_path, \"diff_WT_vs_TGFb_c3.0_cond2.bed\", sep = \"/\"))\nDiffPeaks_TGFb <- subsetByOverlaps(DiffPeaks_TGFb, gr.which)\nseqlevels(DiffPeaks_TGFb, force = T) <- seqlevels(gr.which)\n\nDiffPeaks_Common <- import(paste(macs2_path, \"diff_WT_vs_TGFb_c3.0_common.bed\", sep = \"/\"))\nDiffPeaks_Common <- subsetByOverlaps(DiffPeaks_Common, gr.which)\nseqlevels(DiffPeaks_Common, force = T) <- seqlevels(gr.which)\n\natPeaks_WT <- AnnotationTrack(Peaks_WT, name = \"H2AZ Peaks, WT\", col = \"black\")\natSummits_WT <-  AnnotationTrack(Summits_WT, name = \"H2AZ Summits, WT\", col = \"blue\")\natPeaks_TGFb <-  AnnotationTrack(Peaks_TGFb, name = \"H2AZ Peaks, TGFb\", col = \"black\")\natSummits_TGFb <- AnnotationTrack(Summits_TGFb, name = \"H2AZ Summits, TGFb\", col = \"black\")\n\ndisplayPars(atPeaks_WT) <- list(\"fontcolor.title\" = \"black\", \"background.title\" = \"white\", \"col.axis\" = \"black\", \"col.frame\" = \"white\")\ndisplayPars(atSummits_WT) <- list(\"fontcolor.title\" = \"black\", \"background.title\" = \"white\", \"col.axis\" = \"black\", \"col.frame\" = \"white\")\ndisplayPars(atPeaks_TGFb) <- list(\"fontcolor.title\" = \"black\", \"background.title\" = \"white\", \"col.axis\" = \"black\", \"col.frame\" = \"white\")\ndisplayPars(atSummits_TGFb) <- list(\"fontcolor.title\" = \"black\", \"background.title\" = \"white\", \"col.axis\" = \"black\", \"col.frame\" = \"white\")\n\natDiffPeaks_WT <- AnnotationTrack(DiffPeaks_WT, name = \"Differential Peaks, WT only\", col = \"black\")\natDiffPeaks_TGFb <- AnnotationTrack(DiffPeaks_TGFb, name = \"Differential Peaks, TGFb only\", col = \"black\")\natDiffPeaks_Common <- AnnotationTrack(DiffPeaks_Common, name = \"Common Peaks\", col = \"black\")\n",
    "created" : 1447629035577.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2826330164",
    "id" : "10749154",
    "lastKnownWriteTime" : 1449625772,
    "path" : "~/OneDrive/Development/JCSMR_Genomics/R/TremethickLab/H2AZ_EMT/GenomeWide.R",
    "project_path" : "GenomeWide.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}